#include <avr/interrupt.h>

#define PIR_PIN 2       // PIR Motion Sensor (External Interrupt)
#define TILT_PIN 3      // Tilt Sensor (Pin Change Interrupt)
#define TRIG_PIN 9      // Ultrasonic Sensor Trigger
#define ECHO_PIN 10     // Ultrasonic Sensor Echo
#define LED_PIN 13      // LED Output

// Variables for sensor states
volatile bool motionDetected = false;
volatile bool tiltDetected = false;
volatile long distanceMeasured = 0;
volatile bool timerFlag = false;
volatile bool ledState = false; // Used to toggle LED in timer interrupt

// PIR Interrupt Handler (External Interrupt)
void motionISR() {
    motionDetected = true;
}

// Pin Change Interrupt Handler for Tilt Sensor
ISR(PCINT2_vect) {
    if (digitalRead(TILT_PIN) == LOW) {  // Adjust based on tilt sensor behavior
        tiltDetected = true;
    }
}

// Timer Interrupt for Periodic Actions
ISR(TIMER1_COMPA_vect) {
    timerFlag = true;  // Set flag for main loop to handle
}

// Function to Measure Distance with Ultrasonic Sensor
void measureDistance() {
    digitalWrite(TRIG_PIN, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG_PIN, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);
    
    long duration = pulseIn(ECHO_PIN, HIGH, 30000); // Measure echo pulse duration
    distanceMeasured = (duration > 0) ? (duration * 0.034 / 2) : -1; // Convert to cm

    Serial.print("Distance: ");
    Serial.print(distanceMeasured);
    Serial.println(" cm");
}

// Function to Setup Timer Interrupt (1-second interval)
void setupTimer() {
    cli(); // Disable global interrupts
    TCCR1A = 0;
    TCCR1B = (1 << WGM12) | (1 << CS12) | (1 << CS10); // CTC mode, prescaler 1024
    OCR1A = 15624; // Set compare match value for 1-second interval
    TIMSK1 |= (1 << OCIE1A); // Enable Timer1 compare interrupt
    sei(); // Enable global interrupts
}

// Function to Setup Pin Change Interrupt for Tilt Sensor
void setupTiltInterrupt() {
    PCICR |= (1 << PCIE2);   // Enable Pin Change Interrupt for PORTD
    PCMSK2 |= (1 << PCINT19); // Enable PCINT for pin 3 (TILT_PIN)
}

void setup() {
    Serial.begin(9600);

    pinMode(PIR_PIN, INPUT);
    pinMode(TILT_PIN, INPUT_PULLUP);
    pinMode(TRIG_PIN, OUTPUT);
    pinMode(ECHO_PIN, INPUT);
    pinMode(LED_PIN, OUTPUT);

    attachInterrupt(digitalPinToInterrupt(PIR_PIN), motionISR, RISING);
    setupTiltInterrupt();
    setupTimer();

    Serial.println("System Ready. Waiting for input...");
}

void loop() {
    if (motionDetected) {
        Serial.println("Motion Detected!");
        digitalWrite(LED_PIN, HIGH);
        delay(2000);
        digitalWrite(LED_PIN, LOW);
        motionDetected = false;
    }

    if (tiltDetected) {
        Serial.println("Tilt Detected!");
        digitalWrite(LED_PIN, HIGH);
        delay(1000);
        digitalWrite(LED_PIN, LOW);
        tiltDetected = false;
    }

    if (timerFlag) {
        timerFlag = false;

        // Toggle LED every timer interrupt
        ledState = !ledState;
        digitalWrite(LED_PIN, ledState);

        // Read distance sensor
        measureDistance();
    }

    delay(500);
}
